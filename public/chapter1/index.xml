<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview :: Zymbit Workshop</title>
    <link>http://localhost:1313/zymbit-tutorial/chapter1/index.html</link>
    <description>Background The venerable Raspberry Pi has been around for over a decade (officially created in 2009) and it has become a standard in many robotics, home automation, and other types of uses. Especially for “makers” and other tinkerers. But it has also made serious inroads into the professional and enterprise world – just more quietly.&#xA;It’s a capable, reliable, and powerful Single Board Computer (SBC) with a robust user community. For all it’s strengths, it does have a few notable weaknesses.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>david.simmons@zymbit.com (David G. Simmons)</managingEditor>
    <webMaster>david.simmons@zymbit.com (David G. Simmons)</webMaster>
    <lastBuildDate>Thu, 24 Oct 2024 12:23:03 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/zymbit-tutorial/chapter1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Background Info</title>
      <link>http://localhost:1313/zymbit-tutorial/chapter1/page1/index.html</link>
      <pubDate>Thu, 24 Oct 2024 12:23:03 -0400</pubDate><author>david.simmons@zymbit.com (David G. Simmons)</author>
      <guid>http://localhost:1313/zymbit-tutorial/chapter1/page1/index.html</guid>
      <description>Why are we doing this? SD Card vulernability While that micro SD card boot mechanism is certainly convenient, it does leave the Pi extremely vulnerable to physical tampering. After all, someone can simply walk up to the Pi, remove the SD card, and they have access to all of the programs and data that was running. They can put that card into their own Pi and they have full access to everything.</description>
    </item>
    <item>
      <title>Partitioning for Updates</title>
      <link>http://localhost:1313/zymbit-tutorial/chapter1/page2/index.html</link>
      <pubDate>Thu, 24 Oct 2024 12:23:03 -0400</pubDate><author>david.simmons@zymbit.com (David G. Simmons)</author>
      <guid>http://localhost:1313/zymbit-tutorial/chapter1/page2/index.html</guid>
      <description>A/B Partitioning Some background here is probably appropriate. The idea of A/B partitioning is an important concept for recoverability. If you have a single disk partition that your devices boots from, and you update critical items in that partition that are somehow corrupted, your device may be left in a state where it is impossible to boot or recover. It’s bricked. The only way to recover such a device typically is to physically access the device and make direct changes to the SD Card.</description>
    </item>
  </channel>
</rss>